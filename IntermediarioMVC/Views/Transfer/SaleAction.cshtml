@model IntermediarioMVC.Models.Sale
@{
    ViewBag.Title = "Sale";
}

<h2>New Sale</h2>
<hr/>
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.HiddenFor(model => model.ProductInStockId)
       
        <div class="row my-3">
            <div class="col-sm-12">
                <ul class="list-inline text-info">
                    <li class="list-inline-item"><img src="@Url.Content(Model.ProductInStock.Provider.ImagePath)"
                             alt="Image" class="ml-5 mt-0 rounded-circle"
                             style="width:60px;height:60px;max-width: 100%; height: auto;" />
                    </li>
                    <li class="list-inline-item"><h4 class="ml-0">@Model.ProductInStock.Provider.FullName </h4></li>
                </ul>
                
            </div>
         

        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    @Html.LabelFor(model => model.DateOfSale, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateOfSale, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateOfSale, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SaleState, "State of sale", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.SaleState, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SaleState, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="To sell" class="btn btn-success" />
                    </div>
                </div>

            </div>
            <div class="col-md-4 ml-0">
                <img src="@Url.Content(Model.ProductInStock.Product.ImagePath)" class="img-fluid img-thumbnail" width="400" height="400"/>
            </div>
        </div>
       
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Stock", "Transfer", new { }, new { @class = "btn btn-light" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
