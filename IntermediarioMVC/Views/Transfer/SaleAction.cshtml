@model IntermediarioMVC.Models.Sale
@{
    ViewBag.Title = "Sale";
}

<h2>New Sale</h2>
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.HiddenFor(model => model.ProductInStockId)
       
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.ProductInStock.Product.ProductName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ProductInStock.Product.ProductName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.ProductInStock.Provider.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ProductInStock.Provider.FirstName)
            </dd>

        </dl>
        <div class="form-group">
            @Html.LabelFor(model => model.DateOfSale, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfSale, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfSale, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SaleState, "State of sale", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.SaleState, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SaleState, "", new { @class = "text-danger" })
            </div>
        </div>
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="To sell" class="btn btn-success" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Stock", "Transfer", new { }, new { @class = "btn btn-warning" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
